descriptor_id: PHP
descriptor_type: language
descriptor_flavors:
  - cupcake
  - php
file_extensions:
  - ".php"
install:
  apk:
    - gnupg=${APK_GNUPG_VERSION}
    - php84=${APK_PHP84_VERSION}
    - php84-phar=${APK_PHP84_PHAR_VERSION}
    - php84-mbstring=${APK_PHP84_MBSTRING_VERSION}
    - php84-xmlwriter=${APK_PHP84_XMLWRITER_VERSION}
    - php84-tokenizer=${APK_PHP84_TOKENIZER_VERSION}
    - php84-ctype=${APK_PHP84_CTYPE_VERSION}
    - php84-curl=${APK_PHP84_CURL_VERSION}
    - php84-dom=${APK_PHP84_DOM_VERSION}
    - php84-opcache=${APK_PHP84_OPCACHE_VERSION}
    - php84-openssl=${APK_PHP84_OPENSSL_VERSION}
    - php84-common=${APK_PHP84_COMMON_VERSION}
    - php84-simplexml=${APK_PHP84_SIMPLEXML_VERSION}
    - dpkg=${APK_DPKG_VERSION}
  dockerfile:
    - |-
      # renovate: datasource=repology depName=alpine_3_21/gnupg
      ARG APK_GNUPG_VERSION=2.4.7-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84
      ARG APK_PHP84_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-phar
      ARG APK_PHP84_PHAR_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-mbstring
      ARG APK_PHP84_MBSTRING_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-xmlwriter
      ARG APK_PHP84_XMLWRITER_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-tokenizer
      ARG APK_PHP84_TOKENIZER_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-ctype
      ARG APK_PHP84_CTYPE_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-curl
      ARG APK_PHP84_CURL_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-dom
      ARG APK_PHP84_DOM_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-opcache
      ARG APK_PHP84_OPCACHE_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-openssl
      ARG APK_PHP84_OPENSSL_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-common
      ARG APK_PHP84_COMMON_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/php84-simplexml
      ARG APK_PHP84_SIMPLEXML_VERSION=8.4.3-r0
    - |-
      # renovate: datasource=repology depName=alpine_3_21/dpkg
      ARG APK_DPKG_VERSION=1.22.11-r0
    - RUN update-alternatives --install /usr/bin/php php /usr/bin/php84 110
    - COPY --from=composer/composer:2-bin /composer /usr/bin/composer
    - ENV PATH="/root/.composer/vendor/bin:${PATH}"
    - ENV PHP_CS_FIXER_IGNORE_ENV=true
linters:
  # PHPCS
  - linter_name: phpcs
    name: PHP_PHPCS
    can_output_sarif: true
    linter_url: https://github.com/PHPCSStandards/PHP_CodeSniffer
    linter_repo: https://github.com/PHPCSStandards/PHP_CodeSniffer
    linter_rules_configuration_url: https://github.com/PHPCSStandards/PHP_CodeSniffer/wiki/Advanced-Usage#using-a-default-configuration-file
    linter_rules_inline_disable_url: https://github.com/PHPCSStandards/PHP_CodeSniffer/wiki/Advanced-Usage#ignoring-parts-of-a-file
    linter_rules_ignore_config_url: https://github.com/PHPCSStandards/PHP_CodeSniffer/wiki/Advanced-Usage#ignoring-files-and-folders
    linter_rules_url: https://gist.github.com/tmsnvd/057ef1cf4fd412e8c8e866e5ba5119bc
    config_file_name: phpcs.xml
    cli_lint_mode: list_of_files
    cli_config_arg_name: "--standard="
    cli_sarif_args:
      - "--report=\\Bartlett\\Sarif\\Converter\\Reporter\\PhpCsReport"
    cli_lint_errors_count: regex_number
    cli_lint_errors_regex: "FOUND ([0-9]+) ERRORS"
    examples:
      - "phpcs myfile.php"
      - "phpcs --standard=phpcs.xml myfile.php"
      - "phpcs --standard=phpcs.xml mydir/ myfile.php"
    install:
      dockerfile:
        - |
          RUN GITHUB_AUTH_TOKEN="$(cat /run/secrets/GITHUB_TOKEN)" && export GITHUB_AUTH_TOKEN && composer global require squizlabs/php_codesniffer bartlett/sarif-php-converters
    ide:
      atom:
        - name: linter-phpcs
          url: https://atom.io/packages/linter-phpcs
        - name: atom-phpcs
          url: https://github.com/bpearson/atom-phpcs
      idea:
        - name: phpcs
          url: https://www.jetbrains.com/help/phpstorm/2019.1/using-php-code-sniffer.html
      sublime:
        - name: sublime-phpcs
          url: https://github.com/benmatselby/sublime-phpcs
        - name: SublimeLinter-phpcs
          url: https://github.com/SublimeLinter/SublimeLinter-phpcs
      vscode:
        - name: vscode-phpcs
          url: https://marketplace.visualstudio.com/items?itemName=ikappas.phpcs
  # PHP Stan
  - linter_name: phpstan
    name: PHP_PHPSTAN
    can_output_sarif: true
    linter_url: https://phpstan.org/
    linter_repo: https://github.com/phpstan/phpstan
    linter_image_url: https://i.imgur.com/WaRKPlC.png
    linter_rules_configuration_url: https://phpstan.org/config-reference#neon-format
    linter_rules_inline_disable_url: https://phpstan.org/user-guide/ignoring-errors#ignoring-in-code-using-phpdocs
    config_file_name: phpstan.neon.dist
    cli_lint_mode: list_of_files
    cli_lint_extra_args:
      - "analyse"
      - "--no-progress"
      - "--no-ansi"
      - "--memory-limit"
      - "1G"
    cli_sarif_args:
      - "--error-format=sarif"
    cli_lint_errors_count: regex_number
    cli_lint_errors_regex: "Found ([0-9]+) error"
    examples:
      - "phpstan analyse --no-progress --no-ansi myfile.php"
      - "phpstan analyse --no-progress --no-ansi -c phpstan.neon myfile.php"
      - "phpstan analyse --no-progress --no-ansi myfile1.php myfile2.php"
      - "phpstan analyse --no-progress --no-ansi mydir1/ mydir2/ myfile.php"
    downgraded_version: true
    downgraded_reason: https://github.com/phpstan/phpstan/issues/11225
    install:
      dockerfile:
        - RUN GITHUB_AUTH_TOKEN="$(cat /run/secrets/GITHUB_TOKEN)" && export GITHUB_AUTH_TOKEN && composer config --global allow-plugins.phpstan/extension-installer true && composer global require phpstan/phpstan phpstan/extension-installer bartlett/sarif-php-converters
      idea:
        - name: PHPStan / Psalm / Generics
          url: https://plugins.jetbrains.com/plugin/12754-phpstan--psalm--generics
      vscode:
        - name: vscode-phpstan
          url: https://marketplace.visualstudio.com/items?itemName=calsmurf2904.vscode-phpstan
  # PSALM
  - linter_name: psalm
    name: PHP_PSALM
    can_output_sarif: true
    linter_url: https://psalm.dev
    linter_repo: https://github.com/vimeo/psalm
    linter_rules_url: https://psalm.dev/docs/running_psalm/issues/
    linter_banner_image_url: https://i1.wp.com/phpmagazine.net/wp-content/uploads/2018/12/PsalmLogo.png?w=653&ssl=1
    linter_rules_configuration_url: https://psalm.dev/docs/running_psalm/configuration/
    linter_rules_inline_disable_url: https://psalm.dev/docs/running_psalm/dealing_with_code_issues/#docblock-suppression
    config_file_name: psalm.xml
    cli_lint_mode: list_of_files
    cli_lint_extra_args:
      - --output-format=console
    cli_config_arg_name: "--config="
    cli_sarif_args:
      - "--report={{SARIF_OUTPUT_FILE}}"
    version_extract_regex: "((\\d+(\\.\\d+)+)|Psalm (.*)@)"
    cli_lint_errors_count: regex_number
    cli_lint_errors_regex: "([0-9]+) error"
    examples:
      - "psalm myfile.php"
      - "psalm myfile.php mydir/"
      - "psalm --config=psalm.xml myfile.php"
      - "psalm --config=psalm.xml myfile.php mydir/"
    install:
      dockerfile:
        - |
          RUN GITHUB_AUTH_TOKEN="$(cat /run/secrets/GITHUB_TOKEN)" && export GITHUB_AUTH_TOKEN && composer config --global platform.php 8.3 && composer global require vimeo/psalm
    ide:
      idea:
        - name: PHPStan / Psalm / Generics
          url: https://plugins.jetbrains.com/plugin/12754-phpstan--psalm--generics
          id: de.espend.idea.php.generics
      vscode:
        - name: Psalm VSCode Plugin
          url: https://marketplace.visualstudio.com/items?itemName=getpsalm.psalm-vscode-plugin
  # PHPLint
  - linter_name: phplint
    can_output_sarif: true
    linter_url: https://github.com/overtrue/phplint
    linter_repo: https://github.com/overtrue/phplint
    config_file_name: .phplint.yml
    cli_lint_mode: list_of_files
    cli_sarif_args:
      - "--format=\\Overtrue\\PHPLint\\Output\\SarifOutput"
      - "--output={{SARIF_OUTPUT_FILE}}"
    examples:
      - "phplint myfile.php"
      - "phplint mydir"
      - "phplint mydir myfile.php"
      - "phplint mydir -vvv"
    install:
      dockerfile:
        - |
          RUN GITHUB_AUTH_TOKEN="$(cat /run/secrets/GITHUB_TOKEN)" && export GITHUB_AUTH_TOKEN && composer global require overtrue/phplint bartlett/sarif-php-converters
  # PHP-CS-Fixer
  - linter_name: php-cs-fixer
    name: PHP_PHPCSFIXER
    linter_text: |
      PHP-CS-Fixer is able to fix rule violations detected, and even those marked as (risky)

      - Enable **autofixes** by adding `PHP_PHPCSFIXER` in [APPLY_FIXES variable](https://megalinter.io/beta/configuration/#apply-fixes)
      - Add "--allow-risky=yes" option in PHP_PHPCSFIXER_ARGUMENTS variable
    linter_url: https://cs.symfony.com/
    linter_repo: https://github.com/PHP-CS-Fixer/PHP-CS-Fixer
    linter_image_url: https://cs.symfony.com/_static/images/logo.png
    config_file_name: .php-cs-fixer.dist.php
    cli_lint_mode: project
    cli_lint_extra_args:
      - "fix"
      - "--dry-run"
      - "--verbose"
      - "--show-progress=none"
    cli_config_arg_name: "--config"
    cli_lint_fix_remove_args:
      - "--dry-run"
    version_extract_regex: "(?<=PHP CS Fixer )\\d+(\\.\\d+)+"
    examples:
      - "php-cs-fixer check myfile.php"
      - "php-cs-fixer check mydir"
      - "php-cs-fixer check --config .php-cs-fixer.php"
    install:
      dockerfile:
        - |
          RUN GITHUB_AUTH_TOKEN="$(cat /run/secrets/GITHUB_TOKEN)" && export GITHUB_AUTH_TOKEN && composer global require friendsofphp/php-cs-fixer
    ide:
      netbeans:
        - name: PHP-CS-Fixer
          url: https://plugins.netbeans.apache.org/catalogue/?id=36
      idea:
        - name: php-cs-fixer
          url: https://www.jetbrains.com/help/phpstorm/using-php-cs-fixer.html
      sublime:
        - name: sublime-phpcs
          url: https://github.com/benmatselby/sublime-phpcs
      vim:
        - name: vim-php-cs-fixer
          url: https://github.com/stephpy/vim-php-cs-fixer
      vscode:
        - name: vscode-php-cs-fixer
          url: https://github.com/junstyle/vscode-php-cs-fixer
